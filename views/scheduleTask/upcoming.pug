extends ../layout

block content
  .container
    .d-flex.gap-2.flex-wrap.mb-3
      a.btn.btn-outline-secondary(href='/scheduleTask/calendar') ‚Üê Calendar
      a.btn.btn-outline-success(href='/scheduleTask/new/presence') New Presence
      a.btn.btn-outline-primary(href='/scheduleTask/new/task') New Task

    h2.mt-2.mb-3 Upcoming Tasks
    p.text-muted.small
      | Showing non-completed tasks. Grouped by month using each task's end date if available,
      | otherwise start date, otherwise today. Expired tasks are shown first.

    if expired && expired.length
      h3.mt-4.mb-2 Expired
      .row.row-cols-1.row-cols-md-2.row-cols-lg-3.g-3.section-expired
        each t in expired
          .col
            .task-card.card(class=t.type)
              .card-body
                .d-flex.justify-content-between.align-items-start.mb-1
                  h5.card-title.mb-0= t.title
                  button.btn.btn-sm.btn-outline-success.btn-complete(data-id=t._id) Mark as done
                if t.description
                  p.card-text.text-secondary= t.description
                .d-flex.justify-content-between.align-items-center.mt-2
                  span.badge.rounded-pill(class=t.type)= t.type
                  span.task-date #{new Date(t.effectiveDate).toLocaleDateString('en-US', { year:'numeric', month:'short', day:'numeric'})}

    each g in groups
      if g.items && g.items.length
        h3.mt-4.mb-2= g.label
        .row.row-cols-1.row-cols-md-2.row-cols-lg-3.g-3.section-group(data-key=g.key)
          each t in g.items
            .col
              .task-card.card(class=t.type)
                .card-body
                  .d-flex.justify-content-between.align-items-start.mb-1
                    h5.card-title.mb-0= t.title
                    button.btn.btn-sm.btn-outline-success.btn-complete(data-id=t._id) Mark as done
                  if t.description
                    p.card-text.text-secondary= t.description
                  .d-flex.justify-content-between.align-items-center.mt-2
                    span.badge.rounded-pill(class=t.type)= t.type
                    span.task-date #{new Date(t.effectiveDate).toLocaleDateString('en-US', { year:'numeric', month:'short', day:'numeric'})}

  //- Scripts
  script(src='/js/scheduleTask/upcoming.js', defer)
