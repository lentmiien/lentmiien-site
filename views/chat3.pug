extends layout

//- PUG INPUT:
//- this_conversation    All messages with given conversation ID
//- chats                Summary of all conversations, with conversation ID, title, and last message
//- new_conversation_id  If new conversation is generated, this id should be used as conversation ID

block content
  .row.chat-history.scroll-end
    #chatmessages.col 
  .row.chat-input
    .col-11
      textarea#input.form-control.chat-textarea(name="input", cols="30", rows="5")
    .col-1
      button.btn.btn-primary(title="Select template popup") T
      br
      button.btn.btn-primary(onclick="Send()", title="Send message") S
  .row 
    .col 
      select#model.form-control(name="model")
        each model in models 
          if model.api_endpoint == "gpt-4-1106-preview"
            option(value=`${model.api_endpoint}`, selected)= `${model.model_name} (${Math.floor(model.max_tokens/1000)}k tokens) [In: $${model.input_1k_token_cost} / Out: $${model.output_1k_token_cost} per 1k tokens]`
          else 
            option(value=`${model.api_endpoint}`)= `${model.model_name} (${Math.floor(model.max_tokens/1000)}k tokens) [In: $${model.input_1k_token_cost} / Out: $${model.output_1k_token_cost} per 1k tokens]`
  #popup.popup 
    .popup-content 
      span#closePopupBtn.close(onclick="ClosePopup()") &times;
      h2 Message tool
      b Conversation: 
      span#conversation_id= this_conversation.length > 0 ? this_conversation[0].ConversationID : "NEW"
      b  , Message: 
      span#message_id
      .row.chat-history.tool-scroll-end
        #tool_chatmessages.col 
      .row.chat-input
        .col-3
          input#tooltitle(type="text", name="tooltitle")
          label(for="tool_input_context") Context
          textarea#tool_input_context.form-control.chat-textarea(name="tool_input_context", cols="30", rows="3")
        .col-9
          label(for="tool_input") Prompt
          textarea#tool_input.form-control.chat-textarea(name="tool_input", cols="30", rows="5")
      .row
        .col.button-container
          button.btn.btn-primary(onclick="SendTool()") Send message
          button.btn.btn-secondary Create summary
          button.btn.btn-success Generate image
          button.btn.btn-success Text to speech
          button.btn.btn-warning Generate KDB
  #loadingPopup.loading-popup
    .loading-content
      .loader
      p Loading...
  pre#this_conversation.hidden= JSON.stringify(this_conversation, null, 2)
  pre#chats.hidden= JSON.stringify(chats, null, 2)
  pre#new_conversation_id.hidden= new_conversation_id
  script(src="/chat3.js") 
